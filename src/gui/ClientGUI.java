/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import controller.AlarmActivation;
import controller.BrokenWindowSensor;
import controller.DoorSensor;
import controller.GasDetector;
import controller.SmartWatch;
import controller.SmokeSensor;
import controller.WaterLeakageSensor;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author smsta
 */
public class ClientGUI extends javax.swing.JFrame {

    private WaterLeakageSensor waterLeakageSensor;
    private BrokenWindowSensor brokenWindowSensor;
    private SmartWatch smartWatch;
    private AlarmActivation alarmActivation;
    private SmokeSensor smokeSensor;
    private DoorSensor doorSensor;
    private ActionListener actionListener;
    private GasDetector gas;
    /**
     * Creates new form ClientGUI
     *
     * @throws java.lang.InterruptedException
     */
    public ClientGUI() throws InterruptedException {
        initComponents();
        listenerActions();
        disableActivatorsPanel();
        addListeners();

    }

    private void enableActivatorsPanel() {

        Component[] components = activatorsPanel.getComponents();
        for (Component component : components) {
            component.setEnabled(true);
//            if (component instanceof Container) {
//                enableComponents((Container) component, true);
//            }
        }
    }

    private void disableActivatorsPanel() {
        Component[] components = activatorsPanel.getComponents();
        for (Component component : components) {
            component.setEnabled(false);
//            if (component instanceof Container) {
//                enableComponents((Container) component, true);
//            }
        }
    }

    private void sensorsInit() throws InterruptedException {
        waterLeakageSensor = new WaterLeakageSensor();
        gas = new GasDetector ();
        brokenWindowSensor = new BrokenWindowSensor();
        doorSensor = new DoorSensor();
        smokeSensor = new SmokeSensor();
        alarmActivation = new AlarmActivation();
    
        changeLedColors(false, false, false, false,false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        startClient = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        activatorsPanel = new javax.swing.JPanel();
        waterRadioButton = new javax.swing.JRadioButton();
        smokeRadioButton = new javax.swing.JRadioButton();
        windowRadioButton = new javax.swing.JRadioButton();
        gasRadioButton = new javax.swing.JRadioButton();
        doorRadioButton1 = new javax.swing.JRadioButton();
        ledPanel = new javax.swing.JPanel();
        waterLED = new javax.swing.JLabel();
        waterLabel = new javax.swing.JLabel();
        smokeLED = new javax.swing.JLabel();
        smokeLabel = new javax.swing.JLabel();
        windowLED = new javax.swing.JLabel();
        windowLabel = new javax.swing.JLabel();
        GasLED = new javax.swing.JLabel();
        doorLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        doorLED1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setAutoRequestFocus(false);
        setLocation(new java.awt.Point(600, 0));
        setResizable(false);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setText("Sensors");

        startClient.setText("start");
        startClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startClientActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(startClient)
                .addGap(110, 110, 110)
                .addComponent(jLabel3)
                .addContainerGap(215, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(startClient))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 4, 460, 40));

        jPanel4.setBorder(new javax.swing.border.MatteBorder(null));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        activatorsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Activators"));
        activatorsPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        buttonGroup.add(waterRadioButton);
        waterRadioButton.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 11)); // NOI18N
        waterRadioButton.setText("Water Leakage");
        waterRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                waterRadioButtonActionPerformed(evt);
            }
        });
        activatorsPanel.add(waterRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 16, 168, 69));

        buttonGroup.add(smokeRadioButton);
        smokeRadioButton.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 11)); // NOI18N
        smokeRadioButton.setText("Smoke");
        activatorsPanel.add(smokeRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 168, 69));

        buttonGroup.add(windowRadioButton);
        windowRadioButton.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 11)); // NOI18N
        windowRadioButton.setText("Window");
        windowRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                windowRadioButtonActionPerformed(evt);
            }
        });
        activatorsPanel.add(windowRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 168, 69));

        buttonGroup.add(gasRadioButton);
        gasRadioButton.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 11)); // NOI18N
        gasRadioButton.setText("Gas");
        gasRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gasRadioButtonActionPerformed(evt);
            }
        });
        activatorsPanel.add(gasRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 168, 69));

        buttonGroup.add(doorRadioButton1);
        doorRadioButton1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 11)); // NOI18N
        doorRadioButton1.setText("Door");
        activatorsPanel.add(doorRadioButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 168, 69));

        jPanel4.add(activatorsPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 12, 180, 300));

        ledPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("LED Indicators"));
        ledPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        waterLED.setFont(new java.awt.Font("Arial Black", 1, 48)); // NOI18N
        waterLED.setForeground(new java.awt.Color(255, 51, 0));
        waterLED.setText("•");
        ledPanel.add(waterLED, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 17, 104, 56));

        waterLabel.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        waterLabel.setText("Water Leak");
        ledPanel.add(waterLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 17, 104, 56));

        smokeLED.setFont(new java.awt.Font("Arial Black", 1, 48)); // NOI18N
        smokeLED.setForeground(new java.awt.Color(255, 51, 0));
        smokeLED.setText("•");
        ledPanel.add(smokeLED, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 104, 56));

        smokeLabel.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        smokeLabel.setText("Smoke");
        ledPanel.add(smokeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50, 104, 56));

        windowLED.setFont(new java.awt.Font("Arial Black", 1, 48)); // NOI18N
        windowLED.setForeground(new java.awt.Color(255, 51, 0));
        windowLED.setText("•");
        ledPanel.add(windowLED, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 104, 56));

        windowLabel.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        windowLabel.setText("Window");
        ledPanel.add(windowLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, 104, 56));

        GasLED.setFont(new java.awt.Font("Arial Black", 1, 48)); // NOI18N
        GasLED.setForeground(new java.awt.Color(255, 51, 0));
        GasLED.setText("•");
        ledPanel.add(GasLED, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 104, 56));

        doorLabel.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        doorLabel.setText("Door");
        ledPanel.add(doorLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 150, 104, 56));

        jLabel1.setText("Gas");
        ledPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 220, -1, -1));

        doorLED1.setFont(new java.awt.Font("Arial Black", 1, 48)); // NOI18N
        doorLED1.setForeground(new java.awt.Color(255, 51, 0));
        doorLED1.setText("•");
        ledPanel.add(doorLED1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 104, 56));

        jPanel4.add(ledPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(229, 12, 220, 250));

        jPanel2.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 48, 460, 340));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 393, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startClientActionPerformed
        try {
            // TODO add your handling code here:
            sensorsInit();
            enableActivatorsPanel();
            startClient.setEnabled(false);
        } catch (InterruptedException ex) {
            Logger.getLogger(ClientGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_startClientActionPerformed

    private void gasRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gasRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gasRadioButtonActionPerformed

    private void waterRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_waterRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_waterRadioButtonActionPerformed

    private void windowRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_windowRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_windowRadioButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new ClientGUI().setVisible(true);
                } catch (InterruptedException ex) {
                    Logger.getLogger(ClientGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    private void addListeners() {
       gasRadioButton.addActionListener(actionListener);
        windowRadioButton.addActionListener(actionListener);
        waterRadioButton.addActionListener(actionListener);
        smokeRadioButton.addActionListener(actionListener);
         doorRadioButton1.addActionListener(actionListener);
       
    }

    private void changeLedColors(boolean door, boolean window, boolean water, boolean smoke , boolean gas) {
        if (door) {
          doorLED1.setForeground(Color.red);
        } else {
            doorLED1.setForeground(Color.green);
        }
        if (window) {
            windowLED.setForeground(Color.red);
        } else {
            windowLED.setForeground(Color.green);
        }
        if (water) {
            waterLED.setForeground(Color.red);
        } else {
            waterLED.setForeground(Color.green);
        }
        if (smoke) {
            smokeLED.setForeground(Color.red);
        } else {
            smokeLED.setForeground(Color.green);
        }
         if (gas) {
            GasLED.setForeground(Color.red);
        } else {
            GasLED.setForeground(Color.green);
        }
    }

    private void listenerActions() {
        actionListener = (ActionEvent e) -> {
            if (doorRadioButton1.isSelected()) {
                doorSensor.sendMessage("yes");
                changeLedColors(true, false, false, false,false);
                System.out.println("door");
            } else if (windowRadioButton.isSelected()) {
                brokenWindowSensor.sendMessage("yes");
                changeLedColors(false, true, false, false,false);
                System.out.println("window");
            } else if (smokeRadioButton.isSelected()) {
                smokeSensor.sendMessage("yes");
                changeLedColors(false, false, false, true,false);
                System.out.println("smoke");
            } else if (waterRadioButton.isSelected()) {
                waterLeakageSensor.sendMessage("yes");
                changeLedColors(false, false, true, false,false);
                System.out.println("water");
            }else if (gasRadioButton.isSelected()) { 
                gas.sendMessage("yes");
                changeLedColors(false, false, false, false,true);
                System.out.println("gas");
            }
        };
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel GasLED;
    private javax.swing.JPanel activatorsPanel;
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JLabel doorLED1;
    private javax.swing.JLabel doorLabel;
    private javax.swing.JRadioButton doorRadioButton1;
    private javax.swing.JRadioButton gasRadioButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel ledPanel;
    private javax.swing.JLabel smokeLED;
    private javax.swing.JLabel smokeLabel;
    private javax.swing.JRadioButton smokeRadioButton;
    private javax.swing.JButton startClient;
    private javax.swing.JLabel waterLED;
    private javax.swing.JLabel waterLabel;
    private javax.swing.JRadioButton waterRadioButton;
    private javax.swing.JLabel windowLED;
    private javax.swing.JLabel windowLabel;
    private javax.swing.JRadioButton windowRadioButton;
    // End of variables declaration//GEN-END:variables

}
